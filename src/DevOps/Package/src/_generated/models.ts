//     This code was generated by a Reinforced.Typings tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.

export interface Logger
{
	debug(message: string) : void;
	info(message: string) : void;
}
export interface IBenchmarkStore
{
	getAsync(cancellationToken: any) : any;
	getDetailAsync(id: any, cancellationToken: any) : any;
	add(detail: BenchmarkDetail) : BenchmarkDetail;
	add(detail: BenchmarkRunModel) : BenchmarkRunModel;
	getLastRunAsync(id: any, cancellationToken: any) : any;
	loadAsync(sr: any, none: any) : any;
	saveAsync(cancellationToken: any) : any;
}
export interface BenchmarkDetail
{
	id: any;
	name: string;
	refId: string;
	fullName: string;
	methodTitle: string;
}
export interface BenchmarkHistory
{
	details: BenchmarkDetail[];
	runs: BenchmarkRunModel[];
}
export interface BenchmarkRecordEntry
{
	record: BenchmarkRecord;
	dateTime: any;
}
export interface BenchmarkRecord
{
	detailId: TestId;
	mean: number;
	runId: number;
	bytesAllocated: number;
	properties: { [key:string]: any };
	hasMean: boolean;
}
export interface BenchmarkRunModel
{
	timeStamp: any;
	title: string;
	commitId: string;
	records: BenchmarkRecord[];
	properties: { [key:string]: string };
}
export interface TestId
{
	isMissing: boolean;
	value: any;
}
