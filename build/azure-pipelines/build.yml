trigger:
- none

pool:
  vmImage: ubuntu-latest

parameters:
    - name: PackageVersion
      type: string
      displayName: Package Version
      default: '*'

variables:
    BuildConfiguration: Debug
    FrameworkProjectPath: src/Core/Framework/Framework.csproj
    TestAdapterProjectPath: src/MsTests/TestAdapter/TestAdapter.csproj
    Build.PackageVersion: ${{ parameters.PackageVersion }}


steps:

- checkout: self
  clean: true
  fetchDepth: 0
  persistCredentials: true

- ${{ if eq(parameters.PackageVersion, '*') }}:
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        &build/scripts/AutoVer.ps1 -TagPrefix dev -VersionVariable 'Build.PackageVersion'

- task: DotNetCoreCLI@2
  displayName: Restore Projects
  inputs:
    command: 'restore'
    projects: |
      $(FrameworkProjectPath)
      $(TestAdapterProjectPath)
    feedsToUse: 'select'
- task: DotNetCoreCLI@2
  inputs:
    command: 'pack'
    packagesToPack: '$(FrameworkProjectPath);$(TestAdapterProjectPath)'
    versioningScheme: 'off'
    buildProperties: 'PackageVersion=$(Build.PackageVersion)'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      # Write your commands here
      ls $(Build.ArtifactStagingDirectory)

- task: Bash@3
  condition: ne(variables['Build.PackageVersion'], '*')
  displayName: Tag Version
  inputs:
    targetType: 'inline'
    script: |
      git tag $(Build.PackageVersion) HEAD & \
      git push origin $(Build.PackageVersion)